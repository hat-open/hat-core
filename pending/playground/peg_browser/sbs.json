{"saveFilePath": null, "starting": "Module", "delimiter": "", "definitions": {"value": "Module          <- OWS 'module' MWS Identifier TypeDefinitions OWS EOF\nTypeDefinitions <- (MWS TypeDefinition (MWS TypeDefinition)*)?\nTypeDefinition  <- Identifier OWS ArgNames? OWS '=' OWS Type\n\nType            <- TSimple\n                 / TArray\n                 / TTuple\n                 / TUnion\n                 / TIdentifier\nTSimple         <- 'Boolean'\n                 / 'Integer'\n                 / 'Float'\n                 / 'String'\n                 / 'Bytes'\nTArray          <- 'Array' OWS '(' OWS Type OWS ')'\nTTuple          <- 'Tuple' OWS '{' OWS Entries? OWS '}'\nTUnion          <- 'Union' OWS '{' OWS Entries? OWS '}'\nTIdentifier     <- Identifier ('.' Identifier)? (OWS ArgTypes)?\n\nEntries         <- Entry (MWS Entry)*\nEntry           <- Identifier OWS ':' OWS Type\n\nArgNames        <- '(' OWS Identifiers? OWS ')'\nArgTypes        <- '(' OWS Types? OWS ')'\nIdentifiers     <- Identifier (MWS Identifier)*\nTypes           <- Type (MWS Type)*\n\nIdentifier      <- r'[A-Za-z][A-Za-z0-9_]*'\n\n# mandatory white-space\nMWS             <- WS+\n# optional white-space\nOWS             <- WS*\n# white-space (including comments)\nWS              <- r'([ \\t\\r\\n,]+(#[^\\n])?)+'\n# end of file\nEOF             <- r'$'", "position": {"row": 8, "column": 30}, "mode": "text", "showPrintMargin": true, "showGutter": true}, "data": {"value": "module Module\n\nT1 = Boolean\nT2 = Integer\nT3 = Float\nT4 = String\nT5 = Bytes\n\nT6 = Array(Integer)\nT7 = Array(Array(Boolean))\nT8 = Tuple { x: Integer, y: String }\nT9 = Union { x: Integer, y: String }\n\nT10 = Tuple {}\nT11 = Union {}\nT12 = None\nT13 = Maybe(Integer)\n\nT14(x) = x\nT15 = T14(Integer)\nT16 = T14(String)\n\nT17(x) = Array(x)\nT18(y) = T17(y)\nT19 = T18(Maybe(Integer))", "position": {"row": 6, "column": 10}, "mode": "text", "showPrintMargin": true, "showGutter": true}, "input": {"saveFilePath": "/home/bozo/development/hat-open/playground/peg_browser/sss.json", "starting": "", "delimiter": "", "definitions": {"value": "xcxc", "position": {"row": 0, "column": 4}, "mode": "text", "showPrintMargin": true, "showGutter": true}, "data": {"value": "", "position": null, "mode": "text", "showPrintMargin": true, "showGutter": true}}}